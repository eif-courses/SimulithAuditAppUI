@page "/"
@inject ProtectedSessionStorage sessionStorage
@inject AuthenticationStateProvider authProvider
@inject IUserData userData
@inject IStringLocalizer<App> Localizer
@using System.Globalization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage


<PageTitle>Index</PageTitle>
<h1>@Localizer["Hello World"]</h1>
<h2>@DateTime.Now.ToShortDateString()</h2>
<h2>@DateTime.Now.ToLongDateString()</h2>

<LoginDisplay/>
<SfCalendar TValue="DateTime" />

@code {
    private UserModel loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        await LoadAndVerifyUser();
    }
    private async Task LoadAndVerifyUser()
    {

        var authState = await authProvider.GetAuthenticationStateAsync();
        string objectId = authState.User.Claims.FirstOrDefault(c => c.Type.Contains("objectidentifier"))?.Value;

        if(string.IsNullOrWhiteSpace(objectId) == false)
        {
            loggedInUser = await userData.GetUserFromAuthentication(objectId) ?? new UserModel();
            string firstName = authState.User.Claims.FirstOrDefault(c => c.Type.Contains("givenname"))?.Value;
            string lastName = authState.User.Claims.FirstOrDefault(c => c.Type.Contains("surname"))?.Value;
            string displayName = authState.User.Claims.FirstOrDefault(c => c.Type.Equals("name"))?.Value;
            string email = authState.User.Claims.FirstOrDefault(c => c.Type.Contains("email"))?.Value;

            bool isDirty = false;
            // Id = ObjectIdentifier azure
            if(objectId.Equals(loggedInUser.ObjectIdentifier) == false)
            {
                isDirty = true;
                loggedInUser.ObjectIdentifier = objectId;
            }
            if(firstName.Equals(loggedInUser.FirstName) == false)
            {
                isDirty = true;
                loggedInUser.FirstName = firstName;
            }
            if(lastName.Equals(loggedInUser.LastName) == false)
            {
                isDirty = true;
                loggedInUser.LastName = lastName;
            }
            if(displayName.Equals(loggedInUser.DisplayName) == false)
            {
                isDirty = true;
                loggedInUser.DisplayName = displayName;
            }
            if(email.Equals(loggedInUser.EmailAddress) == false)
            {
                isDirty = true;
                loggedInUser.EmailAddress = email;
            }
            // if firstime create user
            if (isDirty)
            {
                if (string.IsNullOrWhiteSpace(loggedInUser.Id))
                {
                    await userData.CreateUser(loggedInUser);
                }
                else
                {
                    await userData.UpdateUser(loggedInUser);
                }
            }
        }

    }
}
